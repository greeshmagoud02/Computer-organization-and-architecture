///////1 (a) Write a program in assembly language to print single character on screen. 
ORG 100h           ; Origin, to specify that the program starts at 100h (COM file format)

; Read a single character from user
MOV AH, 01h        ; Function 01h of INT 21h is used to read a character from input
INT 21h            ; Call DOS interrupt to get the character
MOV DL, AL         ; Store the input character from AL register to DL for printing

; Print the character on screen
MOV AH, 02h        ; Function 02h of INT 21h is used to print a character
INT 21h            ; Call DOS interrupt to print the character

; Terminate the program
MOV AH, 4Ch        ; Function 4Ch of INT 21h terminates the program
INT 21h            ; Call DOS interrupt to exit

END                ; End of program
////////(b) Write an assembly language program to convert an upper-case letter to the
corresponding lower-case letter.
ORG 100h           ; Origin, to specify that the program starts at 100h (COM file format)

; Display message "Enter an uppercase letter: "
MOV DX, OFFSET msg_input  ; Load the address of the message
MOV AH, 09h        ; Function 09h of INT 21h is used to display a string
INT 21h            ; Call DOS interrupt to print the message

; Read a single character from the user
MOV AH, 01h        ; Function 01h of INT 21h is used to read a character
INT 21h            ; Call DOS interrupt to get the character
MOV AL, AL         ; Store the input character in AL

; Check if the character is an uppercase letter (A-Z)
CMP AL, 'A'        ; Compare AL with 'A'
JL NotUpperCase    ; If the input is less than 'A', it is not uppercase
CMP AL, 'Z'        ; Compare AL with 'Z'
JG NotUpperCase    ; If the input is greater than 'Z', it is not uppercase

; Convert the uppercase letter to lowercase
ADD AL, 20h        ; Add 32 (20h) to convert uppercase to lowercase

; Print the message "The lowercase letter is: "
;MOV DX, OFFSET msg_output  ; Load the address of the output message
;MOV AH, 09h        ; Function 09h of INT 21h is used to display a string
;INT 21h            ; Call DOS interrupt to print the output message

; Print the converted lowercase letter
MOV DL, AL         ; Move the lowercase letter to DL
MOV AH, 02h        ; Function 02h of INT 21h is used to print a single character
INT 21h            ; Call DOS interrupt to print the character
JMP EndProgram     ; Jump to the end of the program

NotUpperCase:
; If the input is not an uppercase letter, display an error message
MOV DX, OFFSET msg_error  ; Load the address of the error message
MOV AH, 09h        ; Function 09h of INT 21h is used to display a string
INT 21h            ; Call DOS interrupt to print the error message

EndProgram:
; Terminate the program
MOV AH, 4Ch        ; Function 4Ch of INT 21h terminates the program
INT 21h            ; Call DOS interrupt to exit

msg_input  DB 'Enter an uppercase letter: $'
msg_output DB 0Dh, 0Ah, 'The lowercase letter is: $'  ; Output message
msg_error  DB 0Dh, 0Ah, 'Error: Not an uppercase letter! $'  ; Error message

END                ; End of program
////////2. (a) Write a program in assembly language to print multiple characters on screen. 
.model small
.stack 100h
.data
    input_msg db 'Enter a string: $'       ; Message to prompt the user for input
    output_msg db 0Dh, 0Ah, 'You entered: $' ; Message to display the output
    input_buffer db 50 dup('$')            ; Buffer to hold user input (50 characters max)

.code
main:
    mov ax, @data         ; Initialize the data segment
    mov ds, ax

    ; Display prompt to the user
    mov ah, 09h           ; DOS function to display string
    lea dx, input_msg      ; Load address of the input prompt message
    int 21h               ; Call DOS interrupt to print the message

    ; Get user input
    mov ah, 0Ah           ; DOS function for buffered input
    lea dx, input_buffer   ; Load the address of the input buffer
    ;mov byte ptr [dx], 49  ; Set buffer size (maximum 49 characters)
    int 21h               ; Call DOS interrupt to get input

    ; Display output message
    mov ah, 09h           ; DOS function to display string
    lea dx, output_msg     ; Load address of the output message
    int 21h               ; Call DOS interrupt to print the message

    ; Print the user input string
    lea si, input_buffer+2 ; SI points to the first character of user input
                           ; input_buffer+2 skips the buffer size and input length
print_loop:
    mov al, [si]          ; Load the current character into AL
    cmp al, 0Dh           ; Check for carriage return (Enter key)
    je done               ; If carriage return, end the loop

    mov ah, 02h           ; DOS function to print a single character
    mov dl, al            ; Move the character into DL (required for int 21h)
    int 21h               ; Call DOS interrupt to print the character

    inc si                ; Move to the next character in the string
    jmp print_loop        ; Repeat the loop for the next character

done:
    ; Terminate the program
    mov ah, 4Ch           ; DOS terminate program function
    int 21h
end main 
///////(b) Write an assembly language program to convert a lower-case letter to the
corresponding upper-case letter. 
.model small
.stack 100h
.data
    msg1 db 'Enter the text: $'
    msg2 db 0Dh,0Ah,'Converted text: $'
    input db 50 dup('$')      ; Reserve space for 50 characters (user input)

.code
main:
    mov ax, @data            ; Initialize data segment
    mov ds, ax

    ; Display message to ask user for input
    mov ah, 09h              ; DOS print string function
    lea dx, msg1
    int 21h

    ; Get user input
    mov ah, 0Ah              ; DOS buffered input
    lea dx, input            ; Load address of input buffer
   ; mov byte ptr [dx], 49    ; Buffer size (maximum 49 characters)
    int 21h

    ; Convert to uppercase
    lea si, input+2          ; Start at the first character (input+2 skips size and actual entered length)
next_char:
    mov al, [si]              ; Load the current character into AL
    cmp al, 0Dh               ; Check for carriage return (Enter key)
    je done                   ; If carriage return, we're done

    cmp al, 'a'               ; Check if the character is lowercase
    jl skip                   ; If less than 'a', skip
    cmp al, 'z'               ; Check if the character is greater than 'z'
    jg skip                   ; If greater than 'z', skip
    sub al, 20h               ; Convert to uppercase by subtracting 32 (20h)

skip:
    mov [si], al              ; Store the converted character back
    inc si                    ; Move to the next character
    jmp next_char             ; Repeat for the next character

done:
    ; Print converted text message
    mov ah, 09h               ; DOS print string function
    lea dx, msg2
    int 21h

    ; Print the converted string
    lea dx, input+2           ; Load address of the converted string (skip size and length bytes)
    mov ah, 09h               ; DOS print string function
    int 21h

    ; Terminate program
    mov ah, 4Ch               ; DOS terminate program function
    int 21h
end main
