
1)	Write an assembly language program to take two single-digit integers from the user and print the result of addition on the screen.

 
ORG 100h                   

; Display message "Enter the first digit: "
MOV DX, OFFSET msg_input1   ; Load the address of the input prompt message
MOV AH, 09h                 ; Function 09h of INT 21h to display a string
INT 21h                     ; Call DOS interrupt to display the message

; Get the first digit from user input
MOV AH, 01h                 ; Function 01h of INT 21h to read a character from input
INT 21h                     ; Call DOS interrupt to get the first digit
SUB AL, '0'                 ; Convert ASCII to integer
MOV BL, AL                  ; Store the first digit (tens place) in BL

; Display message "Enter the second digit: "
MOV DX, OFFSET msg_input2   ; Load the address of the input prompt message
MOV AH, 09h                 ; Function 09h of INT 21h to display a string
INT 21h                     ; Call DOS interrupt to display the message

; Get the second digit from user input
MOV AH, 01h                 ; Function 01h of INT 21h to read a character from input
INT 21h                     ; Call DOS interrupt to get the second digit
SUB AL, '0'                 ; Convert ASCII to integer
MOV CL, AL                  ; Store the second digit (ones place) in CL

; Display message "Two-digit number is: "
MOV DX, OFFSET msg_output   ; Load the address of the message
MOV AH, 09h                 ; Function 09h of INT 21h to display a string
INT 21h                     ; Call DOS interrupt to print the message

; Display first digit (tens place)
ADD BL, '0'                 ; Convert first digit (tens place) back to ASCII
MOV DL, BL                  ; Load first digit (tens place) into DL for printing
MOV AH, 02h                 ; Function 02h of INT 21h to print a character
INT 21h                     ; Call DOS interrupt to display the first digit

; Display second digit (ones place)
ADD CL, '0'                 ; Convert second digit (ones place) back to ASCII
MOV DL, CL                  ; Load second digit (ones place) into DL for printing
MOV AH, 02h                 ; Function 02h of INT 21h to print a character
INT 21h                     ; Call DOS interrupt to display the second digit

EndProgram:
MOV AH, 4Ch                 ; Function 4Ch of INT 21h terminates the program
INT 21h                     ; Call DOS interrupt to exit

msg_input1 DB 'Enter the first digit: $'
msg_input2 DB 0Dh, 0Ah, 'Enter the second digit: $'
msg_output DB 0Dh, 0Ah, 'Two-digit number is: $'


   2) Write an assembly language program to take two single-digit integers         from the user and print the result of addition on the screen.
        ORG 100h
mov dx, offset msg_input1
mov ah, 09h
int 21h

; Get first digit
mov ah, 01h
int 21h
mov bl, al             
cmp al, '0'             
jl NotDigit
cmp al, '9'
jg NotDigit

; Display the first digit
mov dx, offset msg_output1
mov ah, 09h
int 21h
mov dl, bl
mov ah, 02h
int 21h

; Prompt for the second single-digit number
mov dx, offset msg_input2
mov ah, 09h
int 21h

; Get second digit
mov ah, 01h
int 21h
mov cl, al               ; Store second digit in CL
cmp al, '0'             
jl NotDigit
cmp al, '9'
jg NotDigit

; Display the second digit
mov dx, offset msg_output2
mov ah, 09h
int 21h
mov dl, cl
mov ah, 02h
int 21h

; Perform addition of the two digits
mov dx, offset msg_add
mov ah, 09h
int 21h
sub bl, '0'              ; Convert first digit from ASCII to numeric value
sub cl, '0'              ; Convert second digit from ASCII to numeric value
add bl, cl               ; Add the two digits

; Check if the result is a two-digit number (>= 10)
cmp bl, 10
jl SingleDigit           ; If less than 10, it's a single-digit result

; Handle two-digit result
mov dl, 1                ; Tens place is 1 for numbers between 10-18
add dl, '0'              ; Convert tens place to ASCII
mov ah, 02h
int 21h
sub bl, 10               ; Adjust result for ones place (subtract 10)
add bl, '0'              ; Convert ones place to ASCII
mov dl, bl
mov ah, 02h
int 21h
jmp endprogram

SingleDigit:
; Handle single-digit result
add bl, '0'              ; Convert the result to ASCII
mov dl, bl
mov ah, 02h
int 21h

jmp endprogram

; Handle invalid input
NotDigit:
mov dx, offset msg_error
mov ah, 09h
int 21h

; End the program
endprogram:
mov ah, 4Ch
int 21h

; Data section
msg_input1 DB "Enter first digit: $"
msg_output1 DB 0Dh, 0Ah, "The first digit is: $"
msg_input2 DB 0Dh, 0Ah, "Enter second digit: $"
msg_output2 DB 0Dh, 0Ah, "The second digit is: $"
msg_add DB 0Dh, 0Ah, "The addition of the two digits is: $"
msg_error DB 0Dh, 0Ah, "Error: Not a digit!$"
